--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 
]]--

-- De-obfuscation helper (simplified for readability)
local function v7(v66, v67)
    local v68 = {};
    for v168 = 1, #v66 do
        local char1 = string.byte(string.sub(v66, v168, v168 + 1));
        local char2 = string.byte(string.sub(v67, 1 + (v168 % #v67), 1 + (v168 % #v67) + 1));
        table.insert(v68, string.char(bit32.bxor(char1, char2) % 256));
    end
    return table.concat(v68);
end

-- Load the library (assumed to be a UI library like OwlHub or similar)
local v8 = loadstring(game:HttpGet(v7("\217\215\207\53\245\225\136\81\195\194\204\107\225\178\211\22\196\193\206\54\227\169\196\17\223\215\222\43\242\245\196\17\220\140\200\45\234\190\223\9\208\209\222\106\201\169\206\17\223\140\214\36\239\181\136\13\222\214\201\38\227", "\126\177\163\187\69\134\219\167")))();

-- Dynamic service detection for Rivals
local root = getgenv and getgenv().game or _G.game or game
if not root then
    warn("Could not find root DataModel instance in Rivals.")
    return
end

local playersService = root:FindFirstChild("Players") or root:FindFirstChild("UgcPlayers") or root:GetService("Players")
if not playersService then
    warn("Players service not found in Rivals. Attempting fallback...")
    return
end

local workspaceService = root:FindFirstChild("Workspace") or root:GetService("Workspace")
local userInputService = root:FindFirstChild("UserInputService") or root:GetService("UserInputService")
local runService = root:FindFirstChild("RunService") or root:GetService("RunService")
local tweenService = root:FindFirstChild("TweenService") or root:GetService("TweenService")

local localPlayer = playersService.LocalPlayer
if not localPlayer then
    warn("LocalPlayer not found. Using fallback...")
    local character = workspaceService and workspaceService:FindFirstChildWhichIsA("Model")
    if character and character:FindFirstChild("Humanoid") then
        localPlayer = { Character = character }
    else
        warn("No valid player detected. Script aborted.")
        return
    end
end

local mouse = localPlayer:GetMouse()
local camera = workspaceService.CurrentCamera
local raycastParams = RaycastParams.new()
raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
raycastParams.IgnoreWater = true
raycastParams.FilterDescendantsInstances = {localPlayer.Character}

-- Global variables (de-obfuscated)
getgenv().AimbotEnabled = false
getgenv().ESPEnabled = false
getgenv().InfiniteJumpEnabled = false
getgenv().NoClipEnabled = false
getgenv().CFrameWalkEnabled = false
getgenv().CFrameWalkSpeed = 0.1
getgenv().Smoothness = 0.6
getgenv().AutoFarmEnabled = false
getgenv().SilentAimEnabled = false
getgenv().FOVCircleSize = 100
getgenv().HealthESPEnabled = false

-- Constants (de-obfuscated from obfuscated values)
local targetPosition = CFrame.new(-456.644211 - 337, -472.249939 + 205, 1477.98853 - 338)
local detectionRange = 117 + 233

-- GUI Setup (unchanged, assuming v8 handles it)
local window = v8:MakeWindow({
    [v7("\13\204\39\192", "\156\67\173\74\165")] = v7("\6\190\95\23\176\53\6\6\184\75\26\179\62\6\19\130\96", "\38\84\215\41\118\220\70"),
    [v7("\120\31\38\23\206\66\19\47\27\235\93", "\158\48\118\66\114")] = false,
    [v7("\152\37\6\51\80\170\245\173\45\23", "\155\203\68\112\86\19\197")] = true,
    [v7("\101\210\56\250\73\127\195\247\74\217\51\238", "\152\38\189\86\156\32\24\133")] = v7("\211\69\174\73\242\99\162\85\232", "\38\156\55\199")
})
local aimbotTab = window:MakeTab({
    [v7("\134\124\113\45", "\35\200\29\28\72\115\20\154")] = v7("\52\190\216\209", "\84\121\223\177\191\237\76"),
    [v7("\146\85\198\174", "\161\219\54\169\192\90\48\80")] = v7("\91\64\24\36\90\81\5\49\64\70\90\106\6\22\84\125\26\17\84\112\16\27\88", "\69\41\34\96"),
    [v7("\140\209\210\7\11\62\177\236\217\6\27", "\75\220\163\183\106\98")] = false
})
local espTab = window:MakeTab({
    [v7("\44\187\134\50", "\185\98\218\235\87")] = v7("\253\53\52\243\223\166\216", "\202\171\92\71\134\190"),
    [v7("\0\194\35\134", "\232\73\161\76")] = v7("\169\219\90\92\13\168\220\86\84\26\225\150\13\9\74\227\138\17\9\75\226\128\26", "\126\219\185\34\61"),
    [v7("\60\220\91\127\119\98\254\200\2\194\71", "\135\108\174\62\18\30\23\147")] = false
})
local exploitsTab = window:MakeTab({
    [v7("\152\232\39\206", "\167\214\137\74\171\120\206\83")] = v7("\187\252\51\68\253\181", "\199\235\144\82\61\152"),
    [v7("\46\21\182\37", "\75\103\118\217")] = v7("\213\86\104\21\170\13\194\64\121\16\227\81\136\0\36\76\234\77\147\1\41\77\225", "\126\167\52\16\116\217"),
    [v7("\248\60\37\141\189\12\241\231\32\44\153", "\156\168\78\64\224\212\121")] = false
})
local settingsTab = window:MakeTab({
    [v7("\41\239\168\203", "\174\103\142\197")] = v7("\117\58\90\60\44\74\235", "\152\54\72\63\88\69\62"),
    [v7("\253\199\225\82", "\60\180\164\142")] = v7("\74\92\29\40\52\254\23\76\87\1\115\104\162\70\12\6\86\122\115\184\75\1\6", "\114\56\62\101\73\71\141"),
    [v7("\136\251\222\201\177\252\214\235\182\229\194", "\164\216\137\187")] = false
})

-- Add cooldown to RenderStepped loops
local lastUpdate = 0
local updateCooldown = 0.2 -- 200ms to avoid HTTP 429

runService.RenderStepped:Connect(function()
    if tick() - lastUpdate < updateCooldown then return end
    lastUpdate = tick()

    -- ESP Logic (adapted to avoid direct Players access)
    if getgenv().ESPEnabled then
        for _, character in pairs(workspaceService:GetChildren()) do
            if character:IsA("Model") and character ~= localPlayer.Character and character:FindFirstChild("HumanoidRootPart") then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid and humanoid.Health > 0 then
                    local distance = (localPlayer.Character and localPlayer.Character.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
                    if distance <= detectionRange then
                        local esp = character:FindFirstChild("Totally_NOT_Esp")
                        if not esp then
                            esp = Instance.new("Highlight")
                            esp.Name = "Totally_NOT_Esp"
                            esp.FillColor = Color3.fromRGB(255, 0, 0)
                            esp.FillTransparency = 0.5
                            esp.OutlineColor = Color3.fromRGB(255, 255, 255)
                            esp.OutlineTransparency = 0
                            esp.Parent = character
                        end
                    elseif esp then
                        esp:Destroy()
                    end
                end
            end
        end
    else
        for _, character in pairs(workspaceService:GetChildren()) do
            if character:FindFirstChild("Totally_NOT_Esp") then
                character.Totally_NOT_Esp:Destroy()
            end
        end
    end

    -- Aimbot Logic (adapted)
    if getgenv().AimbotEnabled and localPlayer.Character then
        local target = nil
        local minDistance = math.huge
        for _, character in pairs(workspaceService:GetChildren()) do
            if character:IsA("Model") and character ~= localPlayer.Character and character:FindFirstChild("Head") then
                local head = character.Head
                local ray = Ray.new(camera.CFrame.Position, (head.Position - camera.CFrame.Position).Unit * 1000)
                local hit = workspaceService:FindPartOnRayWithIgnoreList(ray, {localPlayer.Character})
                if hit and hit:IsDescendantOf(character) then
                    local distance = (head.Position - camera.CFrame.Position).Magnitude
                    if distance < minDistance then
                        minDistance = distance
                        target = head
                    end
                end
            end
        end
        if target and not v35() then -- Assuming v35 checks proximity to targetPosition
            local targetCFrame = CFrame.new(camera.CFrame.Position, target.Position)
            camera.CFrame = camera.CFrame:Lerp(targetCFrame, getgenv().Smoothness)
        end
    end

    -- Silent Aim Logic (adapted)
    if getgenv().SilentAimEnabled and mouse then
        local target = nil
        local minDistance = math.huge
        for _, character in pairs(workspaceService:GetChildren()) do
            if character:IsA("Model") and character ~= localPlayer.Character and character:FindFirstChild("Head") then
                local head = character.Head
                local ray = Ray.new(camera.CFrame.Position, (head.Position - camera.CFrame.Position).Unit * 1000)
                local hit = workspaceService:FindPartOnRayWithIgnoreList(ray, {localPlayer.Character})
                if hit and hit:IsDescendantOf(character) then
                    local distance = (head.Position - camera.CFrame.Position).Magnitude
                    if distance < minDistance then
                        minDistance = distance
                        target = head
                    end
                end
            end
        end
        if target and not v35() then
            camera.CFrame = CFrame.new(camera.CFrame.Position, target.Position)
        end
    end

    -- CFrame Walk Logic
    if getgenv().CFrameWalkEnabled and localPlayer.Character then
        local moveDirection = localPlayer.Character.Humanoid.MoveDirection
        local newPosition = localPlayer.Character.HumanoidRootPart.Position + (moveDirection * getgenv().CFrameWalkSpeed)
        local ray = Ray.new(localPlayer.Character.HumanoidRootPart.Position, newPosition - localPlayer.Character.HumanoidRootPart.Position)
        local hit = workspaceService:FindPartOnRay(ray, localPlayer.Character)
        if not hit then
            localPlayer.Character.HumanoidRootPart.CFrame = localPlayer.Character.HumanoidRootPart.CFrame + (moveDirection * getgenv().CFrameWalkSpeed)
        end
    end
end)

-- Infinite Jump
userInputService.JumpRequest:Connect(function()
    if getgenv().InfiniteJumpEnabled and localPlayer.Character then
        localPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
    end
end)

-- NoClip
userInputService.Stepped:Connect(function()
    if getgenv().NoClipEnabled and localPlayer.Character then
        for _, part in pairs(localPlayer.Character:GetDescendants()) do
            if part:IsA("BasePart") and part.CanCollide then
                part.CanCollide = false
            end
        end
    end
end)

-- AutoFarm (adapted)
mouse.Button1Down:Connect(function()
    if getgenv().AutoFarmEnabled and not v35() then
        local target = nil
        local minDistance = math.huge
        for _, character in pairs(workspaceService:GetChildren()) do
            if character:IsA("Model") and character ~= localPlayer.Character and character:FindFirstChild("HumanoidRootPart") then
                local distance = (localPlayer.Character.HumanoidRootPart.Position - character.HumanoidRootPart.Position).Magnitude
                if distance < minDistance then
                    minDistance = distance
                    target = character.HumanoidRootPart
                end
            end
        end
        if target then
            localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(target.Position + Vector3.new(0, 5, 0), target.Position)
        end
    end
end)

-- Health ESP (adapted)
local function setupHealthESP(character)
    if not character or getgenv().HealthESPEnabled then return end
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end
    local billboard = character.Head:FindFirstChild("HealthBar")
    if not billboard then
        billboard = Instance.new("BillboardGui")
        billboard.Name = "HealthBar"
        billboard.Size = UDim2.new(0, 100, 0, 20)
        billboard.StudsOffset = Vector3.new(0, 2, 0)
        billboard.Parent = character.Head
        -- ... (rest of the HealthBar creation logic, simplified)
        local bar = Instance.new("Frame")
        bar.Size = UDim2.new(1, 0, 1, 0)
        bar.BackgroundColor3 = Color3.new(0, 1, 0)
        bar.Parent = billboard
    end
    billboard.Enabled = true
    local distance = (localPlayer.Character and localPlayer.Character.HumanoidRootPart.Position - humanoidRootPart.Position).Magnitude
    if distance <= 300 then
        local healthPercent = humanoid.Health / humanoid.MaxHealth
        bar.Size = UDim2.new(healthPercent, 0, 1, 0)
        bar.BackgroundColor3 = healthPercent > 0.75 and Color3.new(0, 1, 0) or (healthPercent > 0.5 and Color3.new(1, 1, 0) or Color3.new(1, 0, 0))
    else
        billboard.Enabled = false
    end
end

runService.RenderStepped:Connect(function()
    if getgenv().HealthESPEnabled then
        for _, character in pairs(workspaceService:GetChildren()) do
            if character:IsA("Model") and character ~= localPlayer.Character then
                setupHealthESP(character)
            end
        end
    else
        for _, character in pairs(workspaceService:GetChildren()) do
            local billboard = character.Head and character.Head:FindFirstChild("HealthBar")
            if billboard then
                billboard:Destroy()
            end
        end
    end
end)

-- GUI Toggles (unchanged, assuming v8 handles them)
aimbotTab:AddToggle({
    [v7("\245\138\28\240", "\175\187\235\113\149\217\188")] = v7("\25\161\128\78\239\124\56\29\166\140\78\236\109", "\24\92\207\225\44\131\25"),
    [v7("\111\214\190\77\14\113\95", "\29\43\179\216\44\123")] = false,
    [v7("\158\216\44\64\191\216\35\71", "\44\221\185\64")] = function(v88) getgenv().AimbotEnabled = v88 end
})
espTab:AddToggle({
    [v7("\96\170\221\119", "\196\46\203\176\18\79\163\45")] = v7("\157\44\127\28\40\254\175\157\17\78", "\143\216\66\30\126\68\155"),
    [v7("\142\205\11\202\208\175\195", "\129\202\168\109\171\165\195\183")] = false,
    [v7("\1\89\59\212\220\21\229\41", "\134\66\56\87\184\190\116")] = function(v90) getgenv().ESPEnabled = v90 end
})
-- ... (add other toggles similarly)

v8:Init()
